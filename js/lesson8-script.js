//Задание 1 Для практикума из занятия 7 продумать, где можно применить замыкания

//1. Для функции генерации змейки,
//2. перемещения змейки,
//3. размещения еды на поле,
//4. подсчет очков и т.д.,
//т.к. когда функция объявляется, то она содержит описание функции и замыкание.
//Замыкание — это коллекция всех переменных из области видимости во время создания функции.
//Замыкание - это внутренняя функция, которая имеет доступ к переменным внешней функции



//Задание 2 Не выполняя кода, ответить, что выведет браузер и почему

// Пример 1
//if (!("a" in window)) {
//     var a = 1;
// }
// alert(a);

// undefined (т.к. "a" in window эквивалентно выражению window.a, что обозначает, что глобальная переменная "a" объявлена.
//Таким образом, ("a" in window) = true, (!("a" in window)) = false и значение '1' не запишется в переменную "a")


// Пример 2
// var b = function a(x) {
//     x && a(--x);
// };
// alert(a);

// Функция не определена


// Пример 3
// function a(x) {
//   return x * 2;
// }
// var a;
// alert(a);

// function a(x) {
//   return x * 2;
// }


// Пример 4
// function b(x, y, a) {
//     arguments[2] = 10;
//     alert(a);
// }
// b(1, 2, 3);

//10


// Пример 5
// function a() {
//   alert(this);
// }
// a.call(null);

//[object Window], т.к. функция получает this = window